clus_vis_rspm<- merged_res %>% ggplot(aes(x=cluster, y=mean_rspm)) +
geom_boxplot()
print(clus_vis_rspm)
print(clus_loc$centers)
head(merged_res)
### center of each cluster
center_data<- merged_res %>% group_by(cluster) %>%
summarise(cen_mean_so2 = mean(mean_so2, na.rm=TRUE),
cen_mean_no2 = mean(mean_no2, na.rm=TRUE),
cen_mean_rspm = mean(mean_rspm, na.rm=TRUE),
) %>% data.frame()
print(center_data)
print(clus_loc$centers)
print(clus_vis_no2)
print(clus_vis_so2)
print(clus_vis_no2)
print(clus_vis_rspm)
ggsave(filename = "ss_val_elbow.png", ss_val_fig, path = figdir)
# Save plots --------------------------------------------------------------
figdir<- paste0(main_dir,"/figures")
ggsave(filename = "ss_val_elbow.png", ss_val_fig, path = figdir)
# save cluster vis
ggsave(filename = "so2_clus_boxplot.png", clus_vis_so2, path = figdir)
ggsave(filename = "no2_clus_boxplot.png", clus_vis_no2, path = figdir)
ggsave(filename = "rspm_clus_boxplot.png", clus_vis_rspm, path = figdir)
source("~/1_DB_Shared/0_um/sem_2/WQD7004 Programming for DSc/9 assignments/Group_Project/wqd7004-group-project/R_files/clus_model.R", echo=TRUE)
source("~/1_DB_Shared/0_um/sem_2/WQD7004 Programming for DSc/9 assignments/Group_Project/wqd7004-group-project/R_files/clus_model.R", echo=TRUE)
?kmeans
library(rstudioapi)
library(dplyr)
library(cluster)
library(ggplot2)
set.seed(7004)
max_k = 20
best_k = 6
main_dir<- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
datadir<- paste0(main_dir,"/data")
clus_data_path<- paste0(datadir,"/data_c.csv")
clus_data<- read.csv(clus_data_path)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(scales)
library(tidyr)
library(rstudioapi)
main_dir<- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
datadir<- paste0(main_dir,"/data")
data_path<- paste0(datadir,"/data.csv")
df=read.csv(data_path)
head(df)
df$sampling_date=NULL
df$stn_code=NULL
df$agency=NULL
df$location_monitoring_station=NULL
head(df)
df$type[df$type %in% "Residential, Rural and other Areas"] <- "Residential"
df$type[df$type %in% "Residential and others"] <- "Residential"
df$type[df$type %in% "Industrial Area"] <- "Industrial"
df$type[df$type %in% "Industrial Areas"] <- "Industrial"
df$type[df$type %in% "RIRUO"] <- "Others"
df$type[df$type %in% "Sensitive"] <- "Others"
df$type[df$type %in% "Sensitive Areas"] <- "Others"
df$type[df$type %in% "Sensitive Area"] <- "Others"
df$type[is.na(df$type)]= "Others"
df <- df %>% mutate(so2 = if_else(so2>500, mean(df$so2), df$so2))
df <- df %>% mutate(no2 = if_else(no2>500, mean(df$no2), df$no2))
df <- df %>% mutate(rspm = if_else(rspm>2000, mean(df$rspm), df$rspm))
df <- df %>% mutate(spm = if_else(spm>2000, mean(df$spm), df$spm))
df <- df %>% mutate(pm2_5 = if_else(pm2_5>350, mean(df$pm2_5), df$pm2_5))
par(mfrow=c(1,5))
boxplot(df$so2,
main = "Boxplot for so2",
col = "orange",
border = "brown",
notch = TRUE)
boxplot(df$no2,
main = "Boxplot for no2",
col = "orange",
border = "brown",
notch = TRUE)
boxplot(df$rspm,
main = "Boxplot for rspm",
col = "orange",
border = "brown",
notch = TRUE)
boxplot(df$spm,
main = "Boxplot for spm",
col = "orange",
border = "brown",
notch = TRUE)
boxplot(df$pm2_5,
main = "Boxplot for pm2_5",
col = "orange",
border = "brown",
notch = TRUE)
df_c=df
data_c_path = paste0(datadir, "/data_c.csv")
write.csv(df_c, data_c_path, row.names=FALSE)
df_c$pm2_5=NULL
df_c$date=NULL
head(df_c)
clus_data<- read.csv(clus_data_path)
head(clus_data)
typeof(clus_data$date)
library(lubridate)
clus_data$date<- ymd(clus_data$date)
typeof(clus_data$date)
head(clus_data)
max(clus_date$date)
max(clus_data$date)
typeof(clus_data$date)
clus_data$date<- ymd(clus_data$date)
max(clus_data$date)
typeof(clus_data$date)
head(clus_data)
ymd("1990-02-01")
clus_data$date<- as.Date(clus_data$date, format="%Y-%m-%d")
typeof(clus_data$date)
max(clus_data$date)
typeof(clus_data$date)
head(clus_data)
class(clus_data$date)
clus_data<- read.csv(clus_data_path)
class(clus_data$date)
clus_data$date<- as.Date(clus_data$date, format="%Y-%m-%d")
class(clus_data$date)
clus_data$date<- ymd(as.Date(clus_data$date, format="%Y-%m-%d"))
class(clus_data$date)
max(clus_data$date)
head(clus_data)
typeof(clus_datadate)
typeof(clus_data$date)
class(clus_data$date)
max(clus_data$date, na.rm=TRUE)
clus_data<- read.csv(clus_data_path)
max(clus_data$date, na.rm=TRUE)
sum(clus_data$date>ymd("2014-01-01"))
sum(clus_data$date>ymd("2014-01-01"), na.rm=TRUE)
rec_clus_data<- clus_data[clus_data$date>ymd("2014-01-01")]
### filter most recent 2 years
rec_clus_data<- clus_data[clus_data$date > ymd("2014-01-01"), ]
nrow(rec_clus_data)
num_obs<- nrow(rec_clus_data)
print("Number and percentage of missing values by record:")
for (col in colnames(rec_clus_data) ){
num_na<- sum(is.na(rec_clus_data[col]))
perc_na<- 100*num_na/num_obs
print(paste(col, num_na, perc_na))
}
start_date = ymd("2015-01-01")
### filter most recent 2 years
rec_clus_data<- clus_data[clus_data$date > start_date, ]
num_obs<- nrow(rec_clus_data)
print("Number and percentage of missing values by record:")
for (col in colnames(rec_clus_data) ){
num_na<- sum(is.na(rec_clus_data[col]))
perc_na<- 100*num_na/num_obs
print(paste(col, num_na, perc_na))
}
### remove rows with missing location
rec_clus_data<- rec_clus_data[!is.na(rec_clus_data$location), ]
loc_data<- rec_clus_data %>% group_by(location) %>%
summarise(mean_so2 = mean(so2, na.rm=TRUE),
mean_no2 = mean(no2, na.rm=TRUE),
mean_rspm = mean(rspm, na.rm=TRUE),
mean_pm2_5 = mean(pm2_5, na.rm=TRUE)
) %>% data.frame()
head(loc_data)
# Find and impute missing values ------------------------------------------
num_loc = nrow(loc_data)
print("Number and percentage of missing values by location:")
for (col in colnames(loc_data) ){
num_na<- sum(is.na(loc_data[col]))
perc_na<- round(100*num_na/num_loc, digits=2)
print(paste(col, num_na, perc_na))
}
loc_data<- rec_clus_data %>% group_by(location) %>%
summarise(mean_so2 = mean(so2, na.rm=TRUE),
mean_no2 = mean(no2, na.rm=TRUE),
mean_rspm = mean(rspm, na.rm=TRUE),
mean_spm = mean(spm, na.rm=TRUE),
mean_pm2_5 = mean(pm2_5, na.rm=TRUE)
) %>% data.frame()
head(loc_data)
# Find and impute missing values ------------------------------------------
num_loc = nrow(loc_data)
print("Number and percentage of missing values by location:")
for (col in colnames(loc_data) ){
num_na<- sum(is.na(loc_data[col]))
perc_na<- round(100*num_na/num_loc, digits=2)
print(paste(col, num_na, perc_na))
}
loc_data$mean_so2[is.na(loc_data$mean_so2)]= mean(loc_data$mean_so2, na.rm = TRUE)
loc_data$mean_no2[is.na(loc_data$mean_no2)]= mean(loc_data$mean_no2, na.rm = TRUE)
loc_data$mean_rspm[is.na(loc_data$mean_rspm)]= mean(loc_data$mean_rspm, na.rm = TRUE)
#### set location as row names
rownames(loc_data)<- loc_data$location
#### remove unnecessary columns
clean_loc_data<- loc_data %>% select(-c(mean_spm, mean_pm2_5, location))
library(rstudioapi)
library(dplyr)
library(cluster)
library(ggplot2)
library(lubridate)
clus_data<- read.csv(clus_data_path)
### filter most recent 2 years
rec_clus_data<- clus_data[clus_data$date > start_date, ]
rec_clus_data<- clus_data[clus_data$date > start_date, ]
### remove rows with missing location
rec_clus_data<- rec_clus_data[!is.na(rec_clus_data$location), ]
loc_data<- rec_clus_data %>% group_by(location) %>%
summarise(mean_so2 = mean(so2, na.rm=TRUE),
mean_no2 = mean(no2, na.rm=TRUE),
mean_rspm = mean(rspm, na.rm=TRUE),
mean_spm = mean(spm, na.rm=TRUE),
mean_pm2_5 = mean(pm2_5, na.rm=TRUE)
) %>% data.frame()
num_loc = nrow(loc_data)
print("Number and percentage of missing values by location:")
for (col in colnames(loc_data) ){
num_na<- sum(is.na(loc_data[col]))
perc_na<- round(100*num_na/num_loc, digits=2)
print(paste(col, num_na, perc_na))
}
loc_data$mean_so2[is.na(loc_data$mean_so2)]= mean(loc_data$mean_so2, na.rm = TRUE)
loc_data$mean_no2[is.na(loc_data$mean_no2)]= mean(loc_data$mean_no2, na.rm = TRUE)
#### set location as row names
rownames(loc_data)<- loc_data$location
#### drop unnecessary columns
clean_loc_data<- loc_data %>% select(-c(mean_spm, mean_pm2_5, location))
head(clean_loc_data)
max_k<- 20
for (k in c(2:max_k)){
k_clus<- kmeans(scaled_loc_data, centers = k, nstart = 10)
ss_val[k-1]<- k_clus$tot.withinss
}
scaled_loc_data<- clean_loc_data
for (mean_col in c("mean_so2", "mean_no2", "mean_rspm")){
scaled_loc_data[mean_col]<- scale(scaled_loc_data[mean_col], center=TRUE, scale=TRUE)
}
#head(scaled_loc_data)
max_k<- 20
for (k in c(2:max_k)){
k_clus<- kmeans(scaled_loc_data, centers = k, nstart = 10)
ss_val[k-1]<- k_clus$tot.withinss
}
max_k<- 20
ss_val<- rep(NA, max_k-1)
for (k in c(2:max_k)){
k_clus<- kmeans(scaled_loc_data, centers = k, nstart = 10)
ss_val[k-1]<- k_clus$tot.withinss
}
ss_val_df<- data.frame(k=c(2:max_k), ss_val = ss_val)
ss_val_fig<- ss_val_df %>% ggplot(aes(x=k, y=ss_val)) +
geom_line()
print(ss_val_fig)
ss_val_fig<- ss_val_df %>% ggplot(aes(x=k, y=ss_val)) +
geom_line() + geom_point()
print(ss_val_fig)
best_k<- 8
clus_loc<- kmeans(scaled_loc_data, centers = best_k, nstart = 10)
clus_grp<- data.frame(clus_loc$cluster) %>% setNames("cluster")
merged_res<- merge(clean_loc_data, clus_grp, by ='row.names', all=TRUE)
merged_res$cluster<- as.factor(merged_res$cluster)
### center of each cluster
center_data<- merged_res %>% group_by(cluster) %>%
summarise(cen_mean_so2 = mean(mean_so2, na.rm=TRUE),
cen_mean_no2 = mean(mean_no2, na.rm=TRUE),
cen_mean_rspm = mean(mean_rspm, na.rm=TRUE),
) %>% data.frame()
print("Center of each cluster:")
print(center_data)
clus_vis_so2<- merged_res %>% ggplot(aes(x=cluster, y=mean_so2)) +
geom_boxplot()
print(clus_vis_so2)
clus_vis_no2<- merged_res %>% ggplot(aes(x=cluster, y=mean_no2)) +
geom_boxplot()
print(clus_vis_no2)
clus_vis_rspm<- merged_res %>% ggplot(aes(x=cluster, y=mean_rspm)) +
geom_boxplot()
print(clus_vis_rspm)
setwd("~/1_DB_Shared/0_um/sem_2/WQD7004 Programming for DSc/9 assignments/Group_Project/wqd7004-group-project")
num_loc = nrow(loc_data)
for (col in colnames(loc_data) ){
num_na<- sum(is.na(loc_data[col]))
perc_na<- round(100*num_na/num_loc, digits=2)
print(c(col, num_na, perc_na))
}
num_loc = nrow(loc_data)
for (col in colnames(loc_data) ){
num_na<- sum(is.na(loc_data[col]))
perc_na<- round(100*num_na/num_loc, digits=2)
print(paste(col, num_na, perc_na))
}
library(cluster)
library(lubridate)
start_date<- ymd("2015-01-01")
rec_clus_data<- df[clus_data$date > start_date, ]
### remove rows with missing location
rec_clus_data<- rec_clus_data[!is.na(rec_clus_data$location), ]
loc_data<- rec_clus_data %>% group_by(location) %>%
summarise(mean_so2 = mean(so2, na.rm=TRUE),
mean_no2 = mean(no2, na.rm=TRUE),
mean_rspm = mean(rspm, na.rm=TRUE),
mean_spm = mean(spm, na.rm=TRUE),
mean_pm2_5 = mean(pm2_5, na.rm=TRUE)
) %>% data.frame()
head(loc_data)
num_loc = nrow(loc_data)
for (col in colnames(loc_data) ){
num_na<- sum(is.na(loc_data[col]))
perc_na<- round(100*num_na/num_loc, digits=2)
print(paste(col, num_na, perc_na))
}
loc_data$mean_so2[is.na(loc_data$mean_so2)]= mean(loc_data$mean_so2, na.rm = TRUE)
loc_data$mean_no2[is.na(loc_data$mean_no2)]= mean(loc_data$mean_no2, na.rm = TRUE)
#### set location as row names
rownames(loc_data)<- loc_data$location
#### drop unnecessary columns
clean_loc_data<- loc_data %>% select(-c(mean_spm, mean_pm2_5, location))
head(clean_loc_data)
scaled_loc_data<- clean_loc_data
for (mean_col in c("mean_so2", "mean_no2", "mean_rspm")){
scaled_loc_data[mean_col]<- scale(scaled_loc_data[mean_col], center=TRUE, scale=TRUE)
}
max_k<- 20
ss_val<- rep(NA, max_k-1)
for (k in c(2:max_k)){
k_clus<- kmeans(scaled_loc_data, centers = k, nstart = 10)
ss_val[k-1]<- k_clus$tot.withinss
}
ss_val_df<- data.frame(k=c(2:max_k), ss_val = ss_val)
ss_val_fig<- ss_val_df %>% ggplot(aes(x=k, y=ss_val)) +
geom_line() + geom_point()
print(ss_val_fig)
max_k<- 20
wcss<- rep(NA, max_k-1)
for (k in c(2:max_k)){
k_clus<- kmeans(scaled_loc_data, centers = k, nstart = 10)
wcss[k-1]<- k_clus$tot.withinss
}
ss_val_df<- data.frame(k=c(2:max_k), wcss = wcss)
ss_val_fig<- ss_val_df %>% ggplot(aes(x=k, y=wcss)) +
geom_line() + geom_point()
print(ss_val_fig)
?kmeans
best_k<- 8
clus_loc<- kmeans(scaled_loc_data, centers = scaled_loc_data[1:best_k,], nstart = 10)
clus_grp<- data.frame(clus_loc$cluster) %>% setNames("cluster")
merged_res<- merge(clean_loc_data, clus_grp, by ='row.names', all=TRUE)
merged_res$cluster<- as.factor(merged_res$cluster)
### center of each cluster
center_data<- merged_res %>% group_by(cluster) %>%
summarise(cen_mean_so2 = mean(mean_so2, na.rm=TRUE),
cen_mean_no2 = mean(mean_no2, na.rm=TRUE),
cen_mean_rspm = mean(mean_rspm, na.rm=TRUE),
) %>% data.frame()
print(center_data)
best_k<- 8
clus_loc<- kmeans(scaled_loc_data, centers = scaled_loc_data[1:best_k,], nstart = 10)
clus_grp<- data.frame(clus_loc$cluster) %>% setNames("cluster")
merged_res<- merge(clean_loc_data, clus_grp, by ='row.names', all=TRUE)
merged_res$cluster<- as.factor(merged_res$cluster)
### center of each cluster
center_data<- merged_res %>% group_by(cluster) %>%
summarise(cen_mean_so2 = mean(mean_so2, na.rm=TRUE),
cen_mean_no2 = mean(mean_no2, na.rm=TRUE),
cen_mean_rspm = mean(mean_rspm, na.rm=TRUE),
) %>% data.frame()
print(center_data)
best_k<- 8
clus_loc<- kmeans(scaled_loc_data, centers = scaled_loc_data[1:best_k,], nstart = 10)
clus_grp<- data.frame(clus_loc$cluster) %>% setNames("cluster")
merged_res<- merge(clean_loc_data, clus_grp, by ='row.names', all=TRUE)
merged_res$cluster<- as.factor(merged_res$cluster)
### center of each cluster
center_data<- merged_res %>% group_by(cluster) %>%
summarise(cen_mean_so2 = mean(mean_so2, na.rm=TRUE),
cen_mean_no2 = mean(mean_no2, na.rm=TRUE),
cen_mean_rspm = mean(mean_rspm, na.rm=TRUE),
num_city = n(),
sample_city = rownames[1]
) %>% data.frame()
best_k<- 8
clus_loc<- kmeans(scaled_loc_data, centers = scaled_loc_data[1:best_k,], nstart = 10)
clus_grp<- data.frame(clus_loc$cluster) %>% setNames("cluster")
merged_res<- merge(clean_loc_data, clus_grp, by ='row.names', all=TRUE)
merged_res$cluster<- as.factor(merged_res$cluster)
### center of each cluster
center_data<- merged_res %>% group_by(cluster) %>%
summarise(cen_mean_so2 = mean(mean_so2, na.rm=TRUE),
cen_mean_no2 = mean(mean_no2, na.rm=TRUE),
cen_mean_rspm = mean(mean_rspm, na.rm=TRUE),
num_city = n(),
#sample_city = rownames[1]
) %>% data.frame()
print(center_data)
best_k<- 8
clus_loc<- kmeans(scaled_loc_data, centers = scaled_loc_data[1:best_k,], nstart = 10)
clus_grp<- data.frame(clus_loc$cluster) %>% setNames("cluster")
merged_res<- merge(clean_loc_data, clus_grp, by ='row.names', all=TRUE)
merged_res$cluster<- as.factor(merged_res$cluster)
### center of each cluster
center_data<- merged_res %>% group_by(cluster) %>%
summarise(num_city = n(),
cen_mean_so2 = mean(mean_so2, na.rm=TRUE),
cen_mean_no2 = mean(mean_no2, na.rm=TRUE),
cen_mean_rspm = mean(mean_rspm, na.rm=TRUE),
) %>% data.frame()
print(center_data)
df_c=df
data_c_path = paste0(datadir, "/data_c.csv")
write.csv(df_c, data_c_path, row.names=FALSE)
df_c$pm2_5=NULL
df_c$date=NULL
head(df_c)
library(rstudioapi)
library(dplyr)
library(cluster)
library(ggplot2)
library(lubridate)
set.seed(7004)
main_dir<- dirname(dirname(rstudioapi::getSourceEditorContext()$path))
datadir<- paste0(main_dir,"/data")
clus_data_path<- paste0(datadir,"/data_c.csv")
clus_data<- read.csv(clus_data_path)
start_date<- ymd("2015-01-01")
rec_clus_data<- clus_data[clus_data$date > start_date, ]
### remove rows with missing location
rec_clus_data<- rec_clus_data[!is.na(rec_clus_data$location), ]
loc_data<- rec_clus_data %>% group_by(location) %>%
summarise(mean_so2 = mean(so2, na.rm=TRUE),
mean_no2 = mean(no2, na.rm=TRUE),
mean_rspm = mean(rspm, na.rm=TRUE),
mean_spm = mean(spm, na.rm=TRUE),
mean_pm2_5 = mean(pm2_5, na.rm=TRUE)
) %>% data.frame()
head(loc_data)
num_loc = nrow(loc_data)
for (col in colnames(loc_data) ){
num_na<- sum(is.na(loc_data[col]))
perc_na<- round(100*num_na/num_loc, digits=2)
print(paste(col, num_na, perc_na))
}
loc_data$mean_so2[is.na(loc_data$mean_so2)]= mean(loc_data$mean_so2, na.rm = TRUE)
loc_data$mean_no2[is.na(loc_data$mean_no2)]= mean(loc_data$mean_no2, na.rm = TRUE)
#### set location as row names
rownames(loc_data)<- loc_data$location
#### drop unnecessary columns
clean_loc_data<- loc_data %>% select(-c(mean_spm, mean_pm2_5, location))
head(clean_loc_data)
scaled_loc_data<- clean_loc_data
for (mean_col in c("mean_so2", "mean_no2", "mean_rspm")){
scaled_loc_data[mean_col]<- scale(scaled_loc_data[mean_col], center=TRUE, scale=TRUE)
}
max_k<- 20
wcss<- rep(NA, max_k-1)
for (k in c(2:max_k)){
k_clus<- kmeans(scaled_loc_data, centers = k, nstart = 10)
wcss[k-1]<- k_clus$tot.withinss
}
ss_val_df<- data.frame(k=c(2:max_k), wcss = wcss)
ss_val_fig<- ss_val_df %>% ggplot(aes(x=k, y=wcss)) +
geom_line() + geom_point()
print(ss_val_fig)
best_k<- 8
clus_loc<- kmeans(scaled_loc_data, centers = best_k, nstart = 10)
clus_grp<- data.frame(clus_loc$cluster) %>% setNames("cluster")
merged_res<- merge(clean_loc_data, clus_grp, by ='row.names', all=TRUE)
merged_res$cluster<- as.factor(merged_res$cluster)
### center of each cluster
center_data<- merged_res %>% group_by(cluster) %>%
summarise(cen_mean_so2 = mean(mean_so2, na.rm=TRUE),
cen_mean_no2 = mean(mean_no2, na.rm=TRUE),
cen_mean_rspm = mean(mean_rspm, na.rm=TRUE),
) %>% data.frame()
print(center_data)
best_k<- 8
clus_loc<- kmeans(scaled_loc_data, centers = best_k, nstart = 10)
clus_grp<- data.frame(clus_loc$cluster) %>% setNames("cluster")
merged_res<- merge(clean_loc_data, clus_grp, by ='row.names', all=TRUE)
merged_res$cluster<- as.factor(merged_res$cluster)
### center of each cluster
center_data<- merged_res %>% group_by(cluster) %>%
summarise(num_city = n(),
cen_mean_so2 = mean(mean_so2, na.rm=TRUE),
cen_mean_no2 = mean(mean_no2, na.rm=TRUE),
cen_mean_rspm = mean(mean_rspm, na.rm=TRUE),
) %>% data.frame()
print(center_data)
best_k<- 8
clus_loc<- kmeans(scaled_loc_data, centers = scaled_loc_data[1:best_k,], nstart = 10)
clus_grp<- data.frame(clus_loc$cluster) %>% setNames("cluster")
merged_res<- merge(clean_loc_data, clus_grp, by ='row.names', all=TRUE)
merged_res$cluster<- as.factor(merged_res$cluster)
### center of each cluster
center_data<- merged_res %>% group_by(cluster) %>%
summarise(num_city = n(),
cen_mean_so2 = mean(mean_so2, na.rm=TRUE),
cen_mean_no2 = mean(mean_no2, na.rm=TRUE),
cen_mean_rspm = mean(mean_rspm, na.rm=TRUE),
) %>% data.frame()
print(center_data)
clus_vis_so2<- merged_res %>% ggplot(aes(x=cluster, y=mean_so2)) +
geom_boxplot()
print(clus_vis_so2)
clus_vis_no2<- merged_res %>% ggplot(aes(x=cluster, y=mean_no2)) +
geom_boxplot()
print(clus_vis_no2)
clus_vis_rspm<- merged_res %>% ggplot(aes(x=cluster, y=mean_rspm)) +
geom_boxplot()
print(clus_vis_rspm)
