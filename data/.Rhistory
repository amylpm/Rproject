length(df)
ncol(df)
df
length(df)
x<-data.frame(num=5:8,bar=c("a","b","c","d"))
x
row.names(x)
1*3^5
1*3^2
3*2^4
2^4
16*3
3*2
6^4
y<-c(4,TRUE)
str(y)
y<-c(4,"s")
str(y)
y<-c(4,TRUE)
y
e<-t
t
e<-z
z
e<-tysus
help(apply(array, margin, ...))
help(apply
)
#Q9
df <- data.frame(
ProductCode = c("SK020","SK042","SK013","SK066","SK079"),
ProductName = c("Enfagrow A+","Ayamas Nuget Cripsy","100 Plus","Ali Cafe","Dettol Natural"),
Price = c(36.79,9.99,6.49,8.99,4.99)
)
df
col.names(df)<-c(1,2,3)
X<-c(30L, 42, TRUE)
typeof(X)
class(X)
#Q1b
day <- as.integer(c(0:6))
day
for(x in day){
print(switch(x+1, '0'="Sunday", '1'="Monday", '2'="Tuesday", '3'="Wednesday", '4'="Thursday", '5'="Friday", '6'="Saturday"))
}
day <-"3"
switch(day,"0"="Sunday","1"="Monday","2"="Tuesday","3"="Wednesday","4"="Thursday","5"="Friday","6"="Saturday")
while(i^2<=c){
return(TRUE)
}
i<-i+1
##Q3 c
square1<-function(c){
i<-1
while(i^2<=c){
return(TRUE)
}
i<-i+1
}
square1(32)
return TRUE
print(TRUE)
square1(32)
square1(65)
x<-sqrt(c)
is.integer(x)
square1(65)
is.integer(6)
print(is.integer(x))
##Q3 c
square1<-function(c){
x<-sqrt(c)
print(is.integer(x))
}
square1(65)
#Q4 b
df1<-data.frame(
EID=c(1:8),
EXP1=sample(1:1000,8),
EXP2=sample(1:1000,8),
EXP3=sample(1:1000,8)
)
df1
returnfirstnrows <- function (df1,n){
df1[1:n,]
}
returnfirstnrows(df1,3)
#Q4 c
returnrows <- function (df1,a){
df1["a"]
}
returnrows(EID)
#Q4 c
returnrows <- function (df1,a){
df1[a]
}
returnrows(df1,"EID")
y<-99
x<-00
x+y
```{r, q1}
```{r q1}
```{r X}
y<-99
x<-00
x+y
```{r X1}
x1+y1
X1<-00
```{r X1}
y1<-99
X1<-00
x1+y1
```{r X1}
y1<-99
X1<-00
X1+y1
e
##4
x<-sample(1:10,4)
x
##7
s1<-x[order(x)]
s1
s2<-x[order(-x)]
s2
s3<-rev(x)
s3
#Q8
print(mtcars)
#Q1
P=68721
i=4
N=12
a=0
M=0
while(a<13){
M1=(P*i/(12/100))/(1-(1+i/12*100)^(-N))
M=append(M,M1)
}
M
MM
#Q1
P=68721
i=4
N=12
a=0
M=c()
while(a<13){
M1=(P*i/(12/100))/(1-(1+i/(12*100))^(-N))
M=append(M,M1)
a=a+1
}
M
M=(P*i/(12/100))/(1-(1+i/(12*100))^(-N))
M
M=rep(M,N)
M
M=(P*i/(12/100))/(1-(1+i/(12*100))^(-N))
#Q1
P=68721
i=4
N=12
M=(P*i/(12/100))/(1-(1+i/(12*100))^(-N))
M
for(a in (1:12)){
Cn = M*(1+i/(12*100))^(-1+N-a)
C=append(C,Cn)
}
C
#Q1
P=68721
i=4
N=12
M=(P*i/(12/100))/(1-(1+i/(12*100))^(-N))
M
c=c()
for(a in (1:12)){
Cn = M*(1+i/(12*100))^(-1+N-a)
C=append(C,Cn)
}
C
c=c()
for(a in (1:12)){
Cn = M*(1+i/(12*100))^(-1+N-a)
C=c(C,Cn)
}
C
C
a=1:12
a
c=c()
a=1:12
a
for(n in a){
Cn = M*((1+(i/(12*100)))^(-(1+N-n)))
C=c(C,Cn)
}
C
c=c()
C
C
rm(C)
Ca=1:12
C
cn=c()
Cn
rm(Cn)
Cn
cn=c()
a=1:12
a
for(n in a){
Cn1 = M*((1+(i/(12*100)))^(-(1+N-n)))
Cn=c(Cn,Cn1)
}
C
Cn
#Q1
P=68721
i=4
N=12
M=(P*i/(12/100))/(1-(1+i/(12*100))^(-N))
M
cn=c()
a=1:12
a
for(n in a){
Cn1 = M*((1+(i/(12*100)))^(-(1+N-n)))
Cn=c(Cn,Cn1)
}
Cn=c()
a=1:12
a
for(n in a){
Cn1 = M*((1+(i/(12*100)))^(-(1+N-n)))
Cn=c(Cn,Cn1)
}
Cn
#Q1
P=68721
i=4
N=12
M=(P*i/(12*100))/(1-(1+i/(12*100))^(-N))
M
Cn=c()
a=1:12
a
for(n in a){
Cn1 = M*((1+(i/(12*100)))^(-(1+N-n)))
Cn=c(Cn,Cn1)
}
Cn
Ln=c()
for(n in a){
Ln1=M-Cn[n]
Ln=c(Ln,Ln1)
}
Ln
Rn=c()
Rn=c()
for(n in a){
Rn1=((Ln[n])/(i/(12*100)))-Cn[n]
Rn=c(Rn,Rn1)
}
Rn
Ln[1]/(i/(12*100))
Ln[1]/(i/(12*100))-Cn[1]
Rn=c()
for(n in a){
Rn1=(Ln[n]/(i/(12*100)))-Cn[n]
Rn=c(Rn,Rn1)
}
Rn
Rn=c()
for(n in a){
Rn1=Ln[n]/(i/(12*100))-Cn[n]
Rn=c(Rn,Rn1)
}
Rn
Ln[1]/(i/(12*100))-Cn[1]
Rn=format(Rn)
Rn
TI=c()
TI2=0
for(n in a){
TI1=Ln[n]
TI2=TI2+TI1
TI=c(TI,TI2)
}
TI
Ln
df=data.frame(Month=)
df=data.frame(
'Month'=1:12,
'Monthly_Payment'=rep(M,12),
'Principal'=Cn,
'Interest'=Ln,
'Unpaid_Balance'=Rn,
'Total_Interest'=TI
)
df
2.273737e-11
#Q2
checkString<-function(A){
x=nchar(A)
y=str_count(A)
}
A("Matric :17068721")
checkString("Matric :17068721")
#Q2
checkString<-function(A){
x=nchar(A)
y=nchar(gsub("\\D", "", A))
}
checkString("Matric :17068721")
X
x
#Q2
checkString<-function(A){
x=nchar(A)
y=nchar(gsub("\\D", "", A))
print(x)
print(y)
}
checkString("Matric :17068721")
str_count("dsdsd")
checkString<-function(A){
x=nchar(A)
y=length(A)
}
checkString("Matric :17068721")
checkString<-function(A){
x=nchar(A)
y=length(A)
print(x)
print(y)
}
checkString("Matric :17068721")
insta;;.packages("stringr Package")
install.packages("stringr Package")
install.packages("stringr")
str_count("dsdsd")
str_count("dsdsd")
checkString<-function(A){
x=nchar(gsub("[0-9]+", "", A))
y=nchar(gsub("\\D", "", A))
sprintf('The argumen is ', A)
sprintf('The number of letters are ', x)
sprintf('The number of digits are ', y)
}
checkString("Matric :17068721")
checkString<-function(A){
x=nchar(gsub("[0-9]+", "", A))
y=nchar(gsub("\\D", "", A))
print(paste('The argumen is ', A))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric :17068721")
checkString<-function(A){
x=nchar(gsub("[0-9]+", "", A))
y=nchar(gsub("\\D", "", A))
print(paste('The argumen is ', A))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric:17068721")
#Q2
checkString<-function(A){
x=nchar(gsub("[^0-9]+", "", A))
y=nchar(gsub("\\D", "", A))
print(paste('The argumen is ', A))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric:17068721")
#Q2
checkString<-function(A){
x=nchar(gsub("[^0-9]+", "", A))
y=nchar(gsub("\\D", "", A))
print(paste('The argumen is ', A))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric: 17068721")
#Q2
checkString<-function(a){
x=nchar(gsub("[^0-9]+", "", a))
y=nchar(gsub("\\D", "", a))
print(paste('The argumen is ', a))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric: 17068721")
#Q2
checkString<-function(a){
x=nchar(gsub("[0-9]+", "", a))
y=nchar(gsub("\\D", "", a))
print(paste('The argumen is ', a))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric: 17068721")
#Q2
checkString<-function(a){
x=nchar(gsub("[^0-9]+","", a))
y=nchar(gsub("\\D", "", a))
print(paste('The argumen is ', a))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric: 17068721")
#Q2
checkString<-function(a){
x=nchar(gsub("[0-9]+","", a))
y=nchar(gsub("\\D", "", a))
print(paste('The argumen is ', a))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric: 17068721")
#Q2
checkString<-function(a){
x=nchar(gsub("[^A-z]+","", a))
y=nchar(gsub("\\D", "", a))
print(paste('The argumen is ', a))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric: 17068721")
x=nchar(gsub("\\w","", a))
y=nchar(gsub("\\D", "", a))
print(paste('The argumen is ', a))
checkString("Matric: 17068721")
#Q2
checkString<-function(a){
x=nchar(gsub("\\w","", a))
y=nchar(gsub("\\d", "", a))
print(paste('The argumen is ', a))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric: 17068721")
#Q2
checkString<-function(a){
x=nchar(gsub("\\w","", a))
y=nchar(gsub("\\D", "", a))
print(paste('The argumen is ', a))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric: 17068721")
#Q2
checkString<-function(a){
x=nchar(gsub("\\W","", a))
y=nchar(gsub("\\D", "", a))
print(paste('The argumen is ', a))
print(paste('The number of letters are ', x))
print(paste('The number of digits are ', y))
}
checkString("Matric: 17068721")
setwd("C:/Users/Acer/Dropbox/PC/Documents/Master of Data Science/WQD7004 Programming for Data Science/wqd7004-group-project/data")
df=read.csv(file="data.csv")
head(df)
df$sampling_date=NULL
df$stn_code=NULL
df$agency=NULL
df$location_monitoring_station=NULL
#df$location=NULL
head(df)
##location
plotdata <- df %>%
count(location) %>%
mutate(pct = n / sum(n),
pctlabel = paste0(round(pct*100), "%")) %>%
arrange(desc(n)) %>%
head(10)
plotdata
library(ggplot2)
library(dplyr)
library(scales)
library(tidyr)
library(wq)
##location
plotdata <- df %>%
count(location) %>%
mutate(pct = n / sum(n),
pctlabel = paste0(round(pct*100), "%")) %>%
arrange(desc(n)) %>%
head(10)
plotdata
p1<-ggplot(plotdata, aes(x = reorder(location, n),y=pct)) +
geom_bar(stat = "identity", fill = "lightgreen") +
geom_text(aes(label = pctlabel), vjust = -0.25) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
scale_y_continuous(labels = percent) +
labs(y = "Percentage", title = "Percentage of Recording From Each Location")
p1
knitr::opts_chunk$set(echo = TRUE)
plotdata <- df %>%
count(location) %>%
mutate(pct = n / sum(n),
pctlabel = paste0(round(pct*100), "%")) %>%
arrange(desc(n)) %>%
head(10)
ggplot(plotdata, aes(x = reorder(location, n),y=pct)) +
geom_bar(stat = "identity", fill = "lightgreen") +
geom_text(aes(label = pctlabel), vjust = -0.25) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
scale_y_continuous(labels = percent) +
labs(y = "Percentage", title = "Percentage of Recording From Each Location")
